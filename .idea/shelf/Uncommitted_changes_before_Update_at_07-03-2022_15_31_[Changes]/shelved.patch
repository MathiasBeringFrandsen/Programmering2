Index: Dag9SingletonOgAdapter/src/opgave3/AnvendPersonAdministrator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave3/AnvendPersonAdministrator.java b/Dag9SingletonOgAdapter/src/opgave3/AnvendPersonAdministrator.java
new file mode 100644
--- /dev/null	(date 1646647756525)
+++ b/Dag9SingletonOgAdapter/src/opgave3/AnvendPersonAdministrator.java	(date 1646647756525)
@@ -0,0 +1,18 @@
+package opgave3;
+
+public class AnvendPersonAdministrator {
+    public static void main(String[] args) {
+        PersonAdministrator admin = PersonAdministrator.getInstance();
+
+        Person p1 = new Person("Mikkel",41);
+        Person p2 = new Person("Frederik",25);
+        Person p3 = new Person("Kristina",28);
+
+        admin.add(p1);
+        admin.add(p2);
+        System.out.println("Efter to add: " + admin.getPersoner());
+        admin.add(p3);
+        admin.remove(p2);
+        System.out.println("Tilføjet p3, fjernet p2: " + admin.getPersoner());
+    }
+}
Index: Dag9SingletonOgAdapter/src/opgave3/PersonAdministrator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave3/PersonAdministrator.java b/Dag9SingletonOgAdapter/src/opgave3/PersonAdministrator.java
new file mode 100644
--- /dev/null	(date 1646647518317)
+++ b/Dag9SingletonOgAdapter/src/opgave3/PersonAdministrator.java	(date 1646647518317)
@@ -0,0 +1,34 @@
+package opgave3;
+
+import java.util.HashSet;
+import java.util.Set;
+
+public class PersonAdministrator {
+    private static PersonAdministrator personAdministrator;
+    Set<Person> personer;
+
+    private PersonAdministrator(){
+        personer = new HashSet<>();
+    }
+
+    public static PersonAdministrator getInstance(){
+        if (personAdministrator == null){
+            personAdministrator = new PersonAdministrator();
+        }
+        return personAdministrator;
+    }
+
+    public void add(Person person){
+        personer.add(person);
+    }
+
+    public void remove(Person person){
+        personer.remove(person);
+    }
+
+    public Set<Person> getPersoner(){
+        return new HashSet<>(personer);
+    }
+
+
+}
Index: Dag9SingletonOgAdapter/src/opgave3/Person.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave3/Person.java b/Dag9SingletonOgAdapter/src/opgave3/Person.java
new file mode 100644
--- /dev/null	(date 1646647706586)
+++ b/Dag9SingletonOgAdapter/src/opgave3/Person.java	(date 1646647706586)
@@ -0,0 +1,16 @@
+package opgave3;
+
+public class Person {
+    private String navn;
+    private int alder;
+
+    public Person(String navn, int alder){
+        this.navn = navn;
+        this.alder = alder;
+    }
+
+    public String toString(){
+        return navn + ", " + alder;
+    }
+
+}
Index: Dag8UnitTest/src/controller/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/controller/Controller.java b/Dag8UnitTest/src/controller/Controller.java
new file mode 100644
--- /dev/null	(date 1549448334000)
+++ b/Dag8UnitTest/src/controller/Controller.java	(date 1549448334000)
@@ -0,0 +1,57 @@
+package controller;
+
+import java.util.Set;
+
+import modelstudent.Student;
+import modelstudent.Team;
+import storage.Storage;
+
+public class Controller {
+    private Storage storage;
+    private static Controller controller;
+
+    private Controller() {
+        storage = new Storage();
+    }
+
+    public static Controller getController() {
+        if (controller == null) {
+            controller = new Controller();
+        }
+        return controller;
+    }
+    
+    public static Controller getTestController() {
+        return new Controller();
+    }
+    
+    public Team createTeam(String name, String room) {
+        Team t = new Team(name, room);
+        storage.addTeam(t);
+        return t;
+    }
+
+    public Student createStudent(String name, int age) {
+        Student s = new Student(name, age);
+        storage.addStudent(s);
+        return s;
+    }
+
+    public void addStudentToTeam(Student s, Team t) {
+        t.addStudent(s);
+    }
+
+    public void updateTeam(Team t, String name, String room) {
+        t.setName(name);
+        t.setRoom(room);
+    }
+
+    public Set<Team> getAllTeams() {
+        return storage.getAllTeams();
+    }
+
+    public Set<Student> getAllStudents() {
+        return storage.getAllStudents();
+    }
+
+}
Index: Dag8UnitTest/src/bibliotek/Bibliotek.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/bibliotek/Bibliotek.java b/Dag8UnitTest/src/bibliotek/Bibliotek.java
new file mode 100644
--- /dev/null	(date 1645527482386)
+++ b/Dag8UnitTest/src/bibliotek/Bibliotek.java	(date 1645527482386)
@@ -0,0 +1,24 @@
+package bibliotek;
+
+import java.time.LocalDate;
+import java.time.temporal.ChronoUnit;
+
+public class Bibliotek {
+
+    public int beregnBøde(LocalDate beregnetDato, LocalDate faktiskDato, boolean voksen) {
+        int bøde = 0;
+        int dageOverTid = (int) ChronoUnit.DAYS.between(beregnetDato, faktiskDato);
+        if (dageOverTid == 0){
+        } else if (dageOverTid < 8){
+            bøde = 10;
+        } else if (dageOverTid < 15){
+            bøde = 30;
+        } else {
+            bøde = 45;
+        }
+        if (voksen){
+            bøde = bøde * 2;
+        }
+        return bøde;
+    }
+}
Index: Dag8UnitTest/test/bibliotek/BibliotekTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/test/bibliotek/BibliotekTest.java b/Dag8UnitTest/test/bibliotek/BibliotekTest.java
new file mode 100644
--- /dev/null	(date 1645527800949)
+++ b/Dag8UnitTest/test/bibliotek/BibliotekTest.java	(date 1645527800949)
@@ -0,0 +1,24 @@
+package bibliotek;
+
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
+
+import java.time.LocalDate;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class BibliotekTest {
+Bibliotek bibliotek = new Bibliotek();
+
+    @BeforeEach
+    void setUp() {
+    }
+
+    @Test
+    void beregnBøde() {
+        LocalDate beregnet = LocalDate.of(2022,02,05);
+        assertEquals(0,bibliotek.beregnBøde(beregnet,LocalDate.of(2022,02,05),true));
+        assertEquals(0,bibliotek.beregnBøde(beregnet,LocalDate.of(2022,02,13),false));
+        assertEquals(0,bibliotek.beregnBøde(beregnet,LocalDate.of(2022,02,28),true));
+    }
+}
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/Dag1Rekursion/Dag1Rekursion.iml\" filepath=\"$PROJECT_DIR$/Dag1Rekursion/Dag1Rekursion.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/Dag2MereRekursion/Dag2MereRekursion.iml\" filepath=\"$PROJECT_DIR$/Dag2MereRekursion/Dag2MereRekursion.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/Dag3EndnuMereRekursion/Dag3EndnuMereRekursion.iml\" filepath=\"$PROJECT_DIR$/Dag3EndnuMereRekursion/Dag3EndnuMereRekursion.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/Dag5CollectionFramework/Dag5CollectionFramework.iml\" filepath=\"$PROJECT_DIR$/Dag5CollectionFramework/Dag5CollectionFramework.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/Dag6LambdaUdtryk/Dag6LambdaUdtryk.iml\" filepath=\"$PROJECT_DIR$/Dag6LambdaUdtryk/Dag6LambdaUdtryk.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/Dag7DesignPatterns/Dag7DesignPatterns.iml\" filepath=\"$PROJECT_DIR$/Dag7DesignPatterns/Dag7DesignPatterns.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
--- a/.idea/modules.xml	(revision 75a18b8978aec3254529c8f89d691df787b6ce4f)
+++ b/.idea/modules.xml	(date 1646646065951)
@@ -8,6 +8,8 @@
       <module fileurl="file://$PROJECT_DIR$/Dag5CollectionFramework/Dag5CollectionFramework.iml" filepath="$PROJECT_DIR$/Dag5CollectionFramework/Dag5CollectionFramework.iml" />
       <module fileurl="file://$PROJECT_DIR$/Dag6LambdaUdtryk/Dag6LambdaUdtryk.iml" filepath="$PROJECT_DIR$/Dag6LambdaUdtryk/Dag6LambdaUdtryk.iml" />
       <module fileurl="file://$PROJECT_DIR$/Dag7DesignPatterns/Dag7DesignPatterns.iml" filepath="$PROJECT_DIR$/Dag7DesignPatterns/Dag7DesignPatterns.iml" />
+      <module fileurl="file://$PROJECT_DIR$/Dag8UnitTest/Dag8UnitTest.iml" filepath="$PROJECT_DIR$/Dag8UnitTest/Dag8UnitTest.iml" />
+      <module fileurl="file://$PROJECT_DIR$/Dag9SingletonOgAdapter/Dag9SingletonOgAdapter.iml" filepath="$PROJECT_DIR$/Dag9SingletonOgAdapter/Dag9SingletonOgAdapter.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: Dag8UnitTest/src/modelstudent/Team.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/modelstudent/Team.java b/Dag8UnitTest/src/modelstudent/Team.java
new file mode 100644
--- /dev/null	(date 1644930136687)
+++ b/Dag8UnitTest/src/modelstudent/Team.java	(date 1644930136687)
@@ -0,0 +1,47 @@
+package modelstudent;
+
+import java.util.Arrays;
+
+public class Team {
+	private String name;
+	private String room;
+
+	private Student[] students;
+	private int numberOfStudents;
+
+	public Team(String name, String room) {
+		this.name = name;
+		this.room = room;
+		students = new Student[30];
+
+	}
+
+	public String getName() {
+		return name;
+	}
+
+	public void setName(String name) {
+		this.name = name;
+	}
+
+	public String getRoom() {
+		return room;
+	}
+
+	public void setRoom(String room) {
+		this.room = room;
+	}
+
+	public void addStudent(Student s) {
+		students[numberOfStudents] = s;
+		numberOfStudents++;
+	}
+
+	public Student[] getStudents() {
+		return Arrays.copyOf(students, students.length);
+	}
+
+	public int getNumberOfStudents() {
+		return numberOfStudents;
+	}
+}
Index: Dag8UnitTest/src/modelstudent/TestNuk.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/modelstudent/TestNuk.java b/Dag8UnitTest/src/modelstudent/TestNuk.java
new file mode 100644
--- /dev/null	(date 1454939940000)
+++ b/Dag8UnitTest/src/modelstudent/TestNuk.java	(date 1454939940000)
@@ -0,0 +1,14 @@
+package modelstudent;
+
+public class TestNuk {
+
+	public static void main(String[] args) {
+		Student student = new Student("Jane Jensen", 22);
+		// Act
+		double actualResult = student.averageGrade();
+		// Assert
+		System.out.println(actualResult);
+
+	}
+
+}
Index: Dag8UnitTest/src/modelstudent/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/modelstudent/Student.java b/Dag8UnitTest/src/modelstudent/Student.java
new file mode 100644
--- /dev/null	(date 1644930240142)
+++ b/Dag8UnitTest/src/modelstudent/Student.java	(date 1644930240142)
@@ -0,0 +1,66 @@
+package modelstudent;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Klasse der beskriver en studerende
+ *
+ * @author mad
+ *
+ */
+public class Student {
+
+    private String name;
+    private int age;
+    private List<Integer> grades; // indeholder den studerendes karakterer
+
+    private static final int MAX_NUMBER_OF_GRADES = 10;// det hoejeste antal
+    // karakterer en
+    // studerende kan have
+
+    /*
+     * Constructor, naar den studerende oprettes, skal den have et navn. Ved
+     * oprettelse er den studerende ikke aktiv
+     */
+    public Student(String name, int age) {
+        this.name = name;
+        this.age = age;
+        grades = new ArrayList<>();
+    }
+    
+    public String getName() {
+        return name;
+    }
+    
+    public void setName(String name) {
+        this.name = name;
+    }
+    
+    public int getAge() {
+        return age;
+    }
+    
+    public void setAge(int age) {
+        this.age = age;
+    }
+    
+    public void addGrade(int grade) {
+        if (grades.size() < MAX_NUMBER_OF_GRADES) {
+            grades.add(grade);
+        }
+        else {
+            throw new TooManyGradesException("For mange karakterer givet");
+        }
+    }
+
+    public double averageGrade() {
+        int sum = 0;
+        double average = 0.0;
+        for (int i = 0; i < grades.size(); i++) {
+            sum = sum + grades.get(i);
+        }
+        average = (double) sum / grades.size();
+        return average;
+    }
+}
Index: Dag9SingletonOgAdapter/src/opgave5/Bag.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave5/Bag.java b/Dag9SingletonOgAdapter/src/opgave5/Bag.java
new file mode 100644
--- /dev/null	(date 1646652572055)
+++ b/Dag9SingletonOgAdapter/src/opgave5/Bag.java	(date 1646652572055)
@@ -0,0 +1,12 @@
+package opgave5;
+
+
+public interface Bag extends Subjekt {
+
+    public void add(String s);
+
+    public void remove(String s);
+
+    public int getCount(String s);
+
+}
Index: Dag8UnitTest/src/modelstudent/TooManyGradesException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/modelstudent/TooManyGradesException.java b/Dag8UnitTest/src/modelstudent/TooManyGradesException.java
new file mode 100644
--- /dev/null	(date 1454940554000)
+++ b/Dag8UnitTest/src/modelstudent/TooManyGradesException.java	(date 1454940554000)
@@ -0,0 +1,8 @@
+package modelstudent;
+
+public class TooManyGradesException extends RuntimeException {
+
+	public TooManyGradesException(String msg) {
+		super(msg);
+	}
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b058f86b-1bea-4621-a564-2ba2ee7677f6\" name=\"Changes\" comment=\"Første commit\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"24SBpPHUl12dUWzDN1X4DWoA1QL\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/Dag7DesignPatterns/src\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"project.propVCSSupport.CommitDialog\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Frand\\Pro2\\Dag7DesignPatterns\\src\" />\r\n      <recent name=\"C:\\Users\\Frand\\Pro2\\Dag6LambdaUdtryk\\src\" />\r\n      <recent name=\"C:\\Users\\Frand\\Pro2\\Dag5CollectionFramework\\src\\opgave23\" />\r\n      <recent name=\"C:\\Users\\Frand\\Pro2\\Dag5CollectionFramework\\src\\opgave22\" />\r\n      <recent name=\"C:\\Users\\Frand\\Pro2\\Dag5CollectionFramework\\src\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"opgave3\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.BogTitelApp\">\r\n    <configuration name=\"AnvendMetoderPaaHashSet\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"opgave1.AnvendMetoderPaaHashSet\" />\r\n      <module name=\"Dag5CollectionFramework\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"opgave1.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BogTitelApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"opgave5.BogTitelApp\" />\r\n      <module name=\"Dag7DesignPatterns\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"opgave5.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Ex1\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ex1student.Ex1\" />\r\n      <module name=\"Dag6LambdaUdtryk\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ex1student.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Ex2\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ex2student.Ex2\" />\r\n      <module name=\"Dag6LambdaUdtryk\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ex2student.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Opgave3\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"opgave3.Opgave3\" />\r\n      <module name=\"Dag6LambdaUdtryk\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"opgave3.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.BogTitelApp\" />\r\n        <item itemvalue=\"Application.Opgave3\" />\r\n        <item itemvalue=\"Application.Ex2\" />\r\n        <item itemvalue=\"Application.Ex1\" />\r\n        <item itemvalue=\"Application.AnvendMetoderPaaHashSet\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"false\" />\r\n    <option name=\"CHECK_NEW_TODO\" value=\"false\" />\r\n    <MESSAGE value=\"Første commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Første commit\" />\r\n    <option name=\"REARRANGE_BEFORE_PROJECT_COMMIT\" value=\"true\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/Dag1Rekursion/src/opgaver/Opgave5.java</url>\r\n          <line>4</line>\r\n          <properties class=\"opgaver.Opgave5\" method=\"euclid\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"4\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/Dag3EndnuMereRekursion/src/maximum/RekursivList.java</url>\r\n          <line>47</line>\r\n          <properties class=\"maximum.RekursivList\" method=\"counter\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"12\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/Dag7DesignPatterns/src/opgave5/BogTitelApp.java</url>\r\n          <line>23</line>\r\n          <option name=\"timeStamp\" value=\"16\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 75a18b8978aec3254529c8f89d691df787b6ce4f)
+++ b/.idea/workspace.xml	(date 1646652572449)
@@ -1,17 +1,63 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="b058f86b-1bea-4621-a564-2ba2ee7677f6" name="Changes" comment="Første commit" />
+    <list default="true" id="b058f86b-1bea-4621-a564-2ba2ee7677f6" name="Changes" comment="Første commit">
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/Dag8UnitTest.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/bibliotek/Bibliotek.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/caculator/Calculator.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/controller/Controller.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/forsikring/BilForsikring.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/modelstudent/Student.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/modelstudent/Team.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/modelstudent/TestNuk.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/modelstudent/TooManyGradesException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/opgave5/Bag.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/opgave5/bagMap.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/src/storage/Storage.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/test/CalculatorTest/CalculatorTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/test/bibliotek/BibliotekTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/test/controller/ControllerTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/test/forsikring/BilForsikringTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/test/modelstudent/StudentTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/test/modelstudent/TeamTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/test/modelstudent/TeamTest1.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag8UnitTest/test/storage/StorageTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/Dag9SingletonOgAdapter.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave2/AnvendCounter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave2/Counter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave3/AnvendPersonAdministrator.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave3/Person.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave3/PersonAdministrator.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave4/ElVare.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave4/FoedeVare.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave4/Spiritus.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave4/SpiritusAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave4/Vare.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave4/VareApp.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave5/Bag.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave5/ObservableBag.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave5/Observer.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave5/Subjekt.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="ChangesViewManager">
+    <option name="groupingKeys">
+      <option value="directory" />
+      <option value="module" />
+    </option>
+  </component>
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="Interface" />
+        <option value="JUnit5 Test Class" />
         <option value="Class" />
+        <option value="Interface" />
       </list>
     </option>
   </component>
@@ -19,41 +65,56 @@
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectId" id="24SBpPHUl12dUWzDN1X4DWoA1QL" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">
     <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
+    <property name="Downloaded.Files.Path.Enabled" value="false" />
+    <property name="Repository.Attach.Annotations" value="false" />
+    <property name="Repository.Attach.JavaDocs" value="false" />
+    <property name="Repository.Attach.Sources" value="false" />
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$/Dag7DesignPatterns/src" />
+    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit5" />
+    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5" value="" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/Dag9SingletonOgAdapter/src/opgave5" />
     <property name="project.structure.last.edited" value="Modules" />
     <property name="project.structure.proportion" value="0.0" />
     <property name="project.structure.side.proportion" value="0.0" />
-    <property name="settings.editor.selected.configurable" value="project.propVCSSupport.CommitDialog" />
+    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
   </component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\Frand\Pro2\Dag9SingletonOgAdapter\src\opgave5" />
+      <recent name="C:\Users\Frand\Pro2\Dag9SingletonOgAdapter\src\opgave4" />
+      <recent name="C:\Users\Frand\Pro2\Dag8UnitTest\test" />
+      <recent name="C:\Users\Frand\Pro2\Dag8UnitTest\src" />
       <recent name="C:\Users\Frand\Pro2\Dag7DesignPatterns\src" />
-      <recent name="C:\Users\Frand\Pro2\Dag6LambdaUdtryk\src" />
-      <recent name="C:\Users\Frand\Pro2\Dag5CollectionFramework\src\opgave23" />
-      <recent name="C:\Users\Frand\Pro2\Dag5CollectionFramework\src\opgave22" />
-      <recent name="C:\Users\Frand\Pro2\Dag5CollectionFramework\src" />
+    </key>
+    <key name="CreateTestDialog.Recents.Supers">
+      <recent name="" />
+    </key>
+    <key name="CreateTestDialog.RecentsKey">
+      <recent name="bibliotek" />
+      <recent name="forsikring" />
     </key>
     <key name="CopyClassDialog.RECENTS_KEY">
       <recent name="opgave3" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.BogTitelApp">
-    <configuration name="AnvendMetoderPaaHashSet" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="opgave1.AnvendMetoderPaaHashSet" />
-      <module name="Dag5CollectionFramework" />
+  <component name="RunManager" selected="Application.VareApp">
+    <configuration name="AnvendCounter" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="opgave2.AnvendCounter" />
+      <module name="Dag9SingletonOgAdapter" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="opgave1.*" />
+          <option name="PATTERN" value="opgave2.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -61,12 +122,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="BogTitelApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="opgave5.BogTitelApp" />
-      <module name="Dag7DesignPatterns" />
+    <configuration name="AnvendPersonAdministrator" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="opgave3.AnvendPersonAdministrator" />
+      <module name="Dag9SingletonOgAdapter" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="opgave5.*" />
+          <option name="PATTERN" value="opgave3.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -74,12 +135,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Ex1" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="ex1student.Ex1" />
-      <module name="Dag6LambdaUdtryk" />
+    <configuration name="VareApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="opgave4.VareApp" />
+      <module name="Dag9SingletonOgAdapter" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="ex1student.*" />
+          <option name="PATTERN" value="opgave4.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -87,39 +148,43 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Ex2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="ex2student.Ex2" />
-      <module name="Dag6LambdaUdtryk" />
+    <configuration name="BibliotekTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="Dag8UnitTest" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="ex2student.*" />
+          <option name="PATTERN" value="bibliotek.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
+      <option name="PACKAGE_NAME" value="bibliotek" />
+      <option name="MAIN_CLASS_NAME" value="bibliotek.BibliotekTest" />
+      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Opgave3" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="opgave3.Opgave3" />
-      <module name="Dag6LambdaUdtryk" />
+    <configuration name="BilForsikringTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="Dag8UnitTest" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="opgave3.*" />
+          <option name="PATTERN" value="forsikring.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
+      <option name="PACKAGE_NAME" value="forsikring" />
+      <option name="MAIN_CLASS_NAME" value="forsikring.BilForsikringTest" />
+      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.BogTitelApp" />
-        <item itemvalue="Application.Opgave3" />
-        <item itemvalue="Application.Ex2" />
-        <item itemvalue="Application.Ex1" />
-        <item itemvalue="Application.AnvendMetoderPaaHashSet" />
+        <item itemvalue="Application.VareApp" />
+        <item itemvalue="Application.AnvendPersonAdministrator" />
+        <item itemvalue="Application.AnvendCounter" />
+        <item itemvalue="JUnit.BibliotekTest" />
+        <item itemvalue="JUnit.BilForsikringTest" />
       </list>
     </recent_temporary>
   </component>
@@ -134,6 +199,7 @@
         </entry>
       </map>
     </option>
+    <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
     <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
Index: Dag9SingletonOgAdapter/src/opgave5/ObservableBag.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave5/ObservableBag.java b/Dag9SingletonOgAdapter/src/opgave5/ObservableBag.java
new file mode 100644
--- /dev/null	(date 1646653219730)
+++ b/Dag9SingletonOgAdapter/src/opgave5/ObservableBag.java	(date 1646653219730)
@@ -0,0 +1,61 @@
+package opgave5;
+
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Iterator;
+
+public class ObservableBag implements Bag, Iterable {
+    HashMap<String, Integer> contents = new HashMap<>();
+    HashSet<Observer> observers = new HashSet<>();
+
+    @Override
+    public void add(String s) {
+        if (!contents.containsKey(s)) {
+            contents.put(s, 1);
+        } else {
+            contents.put(s, contents.get(s) + 1);
+        }
+        for (Observer o : observers){
+            o.update(s,contents.get(s));
+        }
+    }
+
+    @Override
+    public void remove(String s) {
+        if (contents.get(s) == 1){
+            contents.remove(s);
+        } else {
+            contents.put(s, contents.get(s) - 1);
+        }
+        for (Observer o : observers) {
+            o.update(s, contents.get(s));
+        }
+    }
+
+    @Override
+    public int getCount(String s) {
+        return contents.get(s);
+    }
+
+    /**
+     * Returns an iterator over elements of type {@code T}.
+     *
+     * @return an Iterator.
+     */
+    @Override
+    public Iterator<String> iterator() {
+        return contents.keySet().iterator();
+    }
+
+    @Override
+    public void registerObserver(Observer o) {
+        observers.add(o);
+    }
+
+    @Override
+    public void removeObserver(Observer o) {
+        observers.remove(o);
+    }
+
+
+}
Index: Dag8UnitTest/src/storage/Storage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/storage/Storage.java b/Dag8UnitTest/src/storage/Storage.java
new file mode 100644
--- /dev/null	(date 1484729118000)
+++ b/Dag8UnitTest/src/storage/Storage.java	(date 1484729118000)
@@ -0,0 +1,35 @@
+package storage;
+
+import modelstudent.Team;
+
+import java.util.HashSet;
+import java.util.Set;
+
+import modelstudent.Student;
+
+public class Storage {
+    private Set<Team> teams;
+    private Set<Student> students;
+
+    public Storage() {
+        teams = new HashSet<>();
+        students = new HashSet<>();
+    }
+    
+    public void addTeam(Team team) {
+        teams.add(team);
+    }
+    
+    public Set<Team> getAllTeams() {
+        return new HashSet<>(teams);
+    }
+
+    public void addStudent(Student student) {
+        students.add(student);
+    }
+    
+    public Set<Student> getAllStudents() {
+        return new HashSet<>(students);
+    }
+    
+}
Index: Dag9SingletonOgAdapter/Dag9SingletonOgAdapter.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/Dag9SingletonOgAdapter.iml b/Dag9SingletonOgAdapter/Dag9SingletonOgAdapter.iml
new file mode 100644
--- /dev/null	(date 1646646065939)
+++ b/Dag9SingletonOgAdapter/Dag9SingletonOgAdapter.iml	(date 1646646065939)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: Dag8UnitTest/test/controller/ControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/test/controller/ControllerTest.java b/Dag8UnitTest/test/controller/ControllerTest.java
new file mode 100644
--- /dev/null	(date 1645361056721)
+++ b/Dag8UnitTest/test/controller/ControllerTest.java	(date 1645361056721)
@@ -0,0 +1,67 @@
+package controller;
+
+import modelstudent.Student;
+import modelstudent.Team;
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class ControllerTest {
+    Controller controller;
+
+
+    @BeforeEach
+    void setUp() {
+        controller = Controller.getTestController();
+    }
+
+    @Test
+    void createTeam() {
+        assertEquals(0, controller.getAllTeams().size());
+        //act
+        Team t = controller.createTeam("T1", "R1");
+        //assert
+        assertNotNull(t);
+        assertTrue(controller.getAllTeams().contains(t));
+        assertEquals("T1", t.getName());
+        assertEquals("R1", t.getRoom());
+    }
+
+    @Test
+    void createStudent() {
+        assertEquals(0, controller.getAllStudents().size());
+        //act
+        Student s = controller.createStudent("N1", 20);
+        //assert
+        assertNotNull(s);
+        assertTrue(controller.getAllStudents().contains(s));
+        assertEquals("N1", s.getName());
+        assertEquals(20, s.getAge());
+    }
+
+    @Test
+    void addStudentToTeam() {
+        // arrange
+        Team t = controller.createTeam("T1", "R1");
+        Student s = controller.createStudent("N1", 20);
+        assertEquals(0, t.getNumberOfStudents());
+        //act
+        controller.addStudentToTeam(s, t);
+        //assert
+        assertEquals(1, t.getNumberOfStudents());
+        assertTrue(t.getStudents()[0].equals(s));
+    }
+
+    @Test
+    void updateTeam() {
+        // arrange
+        Team t = controller.createTeam("T1", "R1");
+        //act
+        t.setName("T2");
+        t.setRoom("R2");
+        //assert
+        assertEquals("T2", t.getName());
+        assertEquals("R2", t.getRoom());
+    }
+}
\ No newline at end of file
Index: Dag9SingletonOgAdapter/src/opgave4/VareApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave4/VareApp.java b/Dag9SingletonOgAdapter/src/opgave4/VareApp.java
new file mode 100644
--- /dev/null	(date 1646650370879)
+++ b/Dag9SingletonOgAdapter/src/opgave4/VareApp.java	(date 1646650370879)
@@ -0,0 +1,14 @@
+package opgave4;
+
+public class VareApp {
+    public static void main(String[] args) {
+        Vare boremaskine = new ElVare(1200,"Boremaskine");
+        Vare mel = new FoedeVare(15,"Mel");
+        Spiritus vodka = new Spiritus(375,"Purity Vodka");
+        Vare vodkaAdap = new SpiritusAdapter(vodka);
+
+        System.out.println("Moms på boremaskine: " + boremaskine.beregnMoms());
+        System.out.println("Moms på mel: " + mel.beregnMoms());
+        System.out.println("Moms på vodka: " + vodkaAdap.beregnMoms());
+    }
+}
Index: Dag8UnitTest/test/modelstudent/TeamTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/test/modelstudent/TeamTest.java b/Dag8UnitTest/test/modelstudent/TeamTest.java
new file mode 100644
--- /dev/null	(date 1645352713932)
+++ b/Dag8UnitTest/test/modelstudent/TeamTest.java	(date 1645352713932)
@@ -0,0 +1,40 @@
+package modelstudent;
+
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class TeamTest {
+
+    @Test
+    void addStudent() {
+        // arrange
+        Team team = new Team("The winner team", "Room A");
+        Student s1 = new Student("Jane Jensen", 21);
+        Student s2 = new Student("Lene Hansen", 22);
+        Student[] expected = new Student[30];
+        expected[0] = s1;
+        expected[1] = s2;
+        // act
+        team.addStudent(s1);
+        team.addStudent(s2);
+        // assert
+        assertArrayEquals(expected, team.getStudents());
+    }
+
+    @Test
+    void getNumberOfStudents() {
+        // arrange
+        Team team = new Team("The winner team", "Room A");
+        Student s1 = new Student("Jane Jensen", 21);
+        Student s2 = new Student("Lene Hansen", 22);
+        Student[] expected = new Student[30];
+        expected[0] = s1;
+        expected[1] = s2;
+        // act
+        team.addStudent(s1);
+        team.addStudent(s2);
+        // assert
+        assertEquals(2, team.getNumberOfStudents());
+    }
+}
\ No newline at end of file
Index: Dag8UnitTest/test/forsikring/BilForsikringTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/test/forsikring/BilForsikringTest.java b/Dag8UnitTest/test/forsikring/BilForsikringTest.java
new file mode 100644
--- /dev/null	(date 1646639075537)
+++ b/Dag8UnitTest/test/forsikring/BilForsikringTest.java	(date 1646639075537)
@@ -0,0 +1,46 @@
+package forsikring;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class BilForsikringTest {
+    BilForsikring forsikring = new BilForsikring();
+
+    @org.junit.jupiter.api.BeforeEach
+    void setUp() {
+        forsikring.setGrundpaemie(1000);
+    }
+
+    @org.junit.jupiter.api.Test
+    void getGrundPraemie() {
+        assertEquals(1000, forsikring.getGrundPraemie());
+    }
+
+    @org.junit.jupiter.api.Test
+    void setGrundpraemie() {
+        Exception exception = assertThrows(RuntimeException.class, () -> forsikring.setGrundpaemie(-1));
+        assertEquals("grundPr skal vaere positiv", exception.getMessage());
+    }
+
+    @org.junit.jupiter.api.Test
+    void beregnPraemie() {
+        forsikring.setGrundpaemie(1000);
+
+        //BeregningsTests
+        assertEquals(1250, forsikring.beregnPraemie(21, false, 0));
+        assertEquals(1000, forsikring.beregnPraemie(25, false, 2));
+        assertEquals(1062.5, forsikring.beregnPraemie(21, false, 3));
+        assertEquals(850, forsikring.beregnPraemie(28, false, 5));
+        assertEquals(750, forsikring.beregnPraemie(25, false, 6));
+        assertEquals(750, forsikring.beregnPraemie(28, false, 8));
+        assertEquals(650, forsikring.beregnPraemie(28, false, 9));
+        assertEquals(950, forsikring.beregnPraemie(25, true, 0));
+        //ThrowTests
+
+        Exception e1 = assertThrows(RuntimeException.class, () -> forsikring.beregnPraemie(20, true, 4));
+        assertEquals(e1.getMessage(), "Du kan ikke have kaert skadefri saelaenge");
+        Exception e2 = assertThrows(RuntimeException.class, () -> forsikring.beregnPraemie(17, true, 40));
+        assertEquals("Du er for ung til at tegne en forsikring", e2.getMessage());
+        Exception e3 = assertThrows(RuntimeException.class, () -> forsikring.beregnPraemie(18, false, -22));
+        assertEquals("Antal skade frie aer skal vaere positiv", e3.getMessage());
+    }
+}
\ No newline at end of file
Index: Dag9SingletonOgAdapter/src/opgave4/Spiritus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave4/Spiritus.java b/Dag9SingletonOgAdapter/src/opgave4/Spiritus.java
new file mode 100644
--- /dev/null	(date 1646649289220)
+++ b/Dag9SingletonOgAdapter/src/opgave4/Spiritus.java	(date 1646649289220)
@@ -0,0 +1,31 @@
+package opgave4;
+
+public class Spiritus {
+    private int prisen;
+    private String betegnelse;
+    
+    public Spiritus(int prisen, String betegnelse) {
+        this.prisen = prisen;
+        this.betegnelse = betegnelse;
+    }
+    
+    public int getPrisen() {
+        return prisen;
+    }
+    
+    public void setPrisen(int prisen) {
+        this.prisen = prisen;
+    }
+    
+    public String getBetegnelse() {
+        return betegnelse;
+    }
+    
+    public void setBetegnelse(String betegnelse) {
+        this.betegnelse = betegnelse;
+    }
+    
+    public double hentMoms() {
+        return prisen * 0.25;
+    }
+}
Index: Dag8UnitTest/test/modelstudent/StudentTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/test/modelstudent/StudentTest.java b/Dag8UnitTest/test/modelstudent/StudentTest.java
new file mode 100644
--- /dev/null	(date 1645360550521)
+++ b/Dag8UnitTest/test/modelstudent/StudentTest.java	(date 1645360550521)
@@ -0,0 +1,64 @@
+package modelstudent;
+
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class StudentTest {
+    @Test
+    public void student() {
+        Student student = new Student("Jane Jensen", 22);
+        assertNotNull(student);
+        assertEquals("Jane Jensen", student.getName());
+        assertEquals(22, student.getAge());
+    }
+
+    @Test
+    public void setName() {
+        Student student = new Student("Jane Jensen", 22);
+        student.setName("Hugo Mortensen");
+        assertEquals("Hugo Mortensen", student.getName());
+    }
+
+    @Test
+    public void setAge() {
+        Student student = new Student("Jane Jensen", 22);
+        student.setAge(33);
+        assertEquals(33, student.getAge());
+    }
+
+    @Test
+    void averageGrade() {
+        // Arrange
+        Student student = new Student("Jane Jensen", 22);
+        student.addGrade(7);
+        student.addGrade(12);
+        student.addGrade(2);
+        // Act
+        double actualResult = student.averageGrade();
+        // Assert
+        assertEquals(7, actualResult, 0.0001);
+
+    }
+
+    @Test
+    public void averageGradeException() {
+        // Arrange
+        Student student = new Student("Jane Jensen", 22);
+        student.addGrade(7);
+        student.addGrade(12);
+        student.addGrade(2);
+        student.addGrade(7);
+        student.addGrade(12);
+        student.addGrade(2);
+        student.addGrade(7);
+        student.addGrade(12);
+        student.addGrade(2);
+        student.addGrade(7);
+        // Act & Assert
+        Exception exception = assertThrows(TooManyGradesException.class, () -> {
+            student.addGrade(12);
+        });
+        assertEquals(exception.getMessage(), "For mange karakterer givet");
+    }
+}
Index: Dag8UnitTest/src/forsikring/BilForsikring.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/forsikring/BilForsikring.java b/Dag8UnitTest/src/forsikring/BilForsikring.java
new file mode 100644
--- /dev/null	(date 1645525598619)
+++ b/Dag8UnitTest/src/forsikring/BilForsikring.java	(date 1645525598619)
@@ -0,0 +1,50 @@
+
+package forsikring;
+
+public class BilForsikring {
+    private double grundPraemie;
+
+    public double getGrundPraemie() {
+        return grundPraemie;
+    }
+
+    public void setGrundpaemie(double grundPr) {
+        if (grundPr <= 0) {
+            throw new RuntimeException("grundPr skal vaere positiv");
+        }
+        grundPraemie = grundPr;
+    }
+
+    public double beregnPraemie(int alder, boolean isKvinde, int skadeFrieaer) {
+        double praemie = grundPraemie;
+        if (praemie == 0) {
+            throw new RuntimeException("GrundPraemie har ikke faeet en vaerdi");
+        }
+        if (alder < 18) {
+            throw new RuntimeException("Du er for ung til at tegne en forsikring");
+        }
+        if (alder - skadeFrieaer < 18) {
+            throw new RuntimeException("Du kan ikke have kaert skadefri saelaenge");
+        }
+        if (skadeFrieaer < 0) {
+            throw new RuntimeException("Antal skade frie aer skal vaere positiv");
+        }
+        if (alder < 25) {
+            praemie = 1.25 * grundPraemie;
+        }
+        if (isKvinde) {
+            praemie = praemie * 0.95;
+        }
+        if (skadeFrieaer < 3) {
+        } else if (skadeFrieaer < 6) {
+            praemie = praemie * 0.85;
+        } else if (skadeFrieaer < 9) {
+            praemie = praemie * 0.75;
+        } else {
+            praemie = praemie * 0.65;
+        }
+        return praemie;
+
+    }
+
+}
Index: Dag8UnitTest/test/modelstudent/TeamTest1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/test/modelstudent/TeamTest1.java b/Dag8UnitTest/test/modelstudent/TeamTest1.java
new file mode 100644
--- /dev/null	(date 1645360578977)
+++ b/Dag8UnitTest/test/modelstudent/TeamTest1.java	(date 1645360578977)
@@ -0,0 +1,73 @@
+package modelstudent;
+
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class TeamTest1 {
+    private Team team;
+    private Student s1, s2, s3;
+
+    @BeforeEach
+    void setUp() {
+        // arrange
+        team = new Team("The winner team", "Room A");
+        s1 = new Student("Jane Jensen", 21);
+        s2 = new Student("Lene Hansen", 22);
+        s3 = new Student("Mette Nielsen", 20);
+        team.addStudent(s1);
+        team.addStudent(s2);
+    }
+    @Test
+    public void team() {
+        // act
+        Team team = new Team("Great Boys", "Room B");
+        //assert
+        assertNotNull(team);
+        assertEquals("Great Boys", team.getName());
+        assertEquals("Room B", team.getRoom());
+        assertEquals(0, team.getNumberOfStudents());
+        Student[] expected = new Student[30];
+        assertArrayEquals(team.getStudents(), expected);
+
+    }
+
+    @Test
+    void setName() {
+        //act
+        team.setName("Great Boys");
+        //assert
+        assertEquals("Great Boys", team.getName());
+    }
+
+    @Test
+    void setRoom() {
+        //act
+        team.setRoom("Room B");
+        //assert
+        assertEquals("Room B", team.getRoom());
+    }
+
+    @Test
+    void addStudent() {
+        // arrange
+        Student[] expected = new Student[30];
+        expected[0] = s1;
+        expected[1] = s2;
+        expected[2] = s3;
+        // act
+        team.addStudent(s3);
+        // assert
+        assertArrayEquals(team.getStudents(), expected);
+    }
+
+    @Test
+    void getNumberOfStudents() {
+        // arrange
+        // act
+        int actualResult = team.getNumberOfStudents();
+        // assert
+        assertEquals(actualResult, 2);
+    }
+}
\ No newline at end of file
Index: Dag9SingletonOgAdapter/src/opgave4/SpiritusAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave4/SpiritusAdapter.java b/Dag9SingletonOgAdapter/src/opgave4/SpiritusAdapter.java
new file mode 100644
--- /dev/null	(date 1646650444437)
+++ b/Dag9SingletonOgAdapter/src/opgave4/SpiritusAdapter.java	(date 1646650444437)
@@ -0,0 +1,15 @@
+package opgave4;
+
+public class SpiritusAdapter extends Vare {
+    private Spiritus spiritus;
+
+    public SpiritusAdapter(Spiritus spiritus) {
+        super(spiritus.getPrisen(), spiritus.getBetegnelse());
+        this.spiritus = spiritus;
+    }
+
+    @Override
+    public double beregnMoms() {
+        return spiritus.hentMoms();
+    }
+}
Index: Dag9SingletonOgAdapter/src/opgave2/AnvendCounter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave2/AnvendCounter.java b/Dag9SingletonOgAdapter/src/opgave2/AnvendCounter.java
new file mode 100644
--- /dev/null	(date 1646646707922)
+++ b/Dag9SingletonOgAdapter/src/opgave2/AnvendCounter.java	(date 1646646707922)
@@ -0,0 +1,17 @@
+package opgave2;
+
+public class AnvendCounter {
+    public static void main(String[] args) {
+        Counter counter = Counter.getInstance();
+
+        System.out.println("Start værdi: " + counter.getValue());
+        counter.count();
+        counter.count();
+        counter.count();
+        System.out.println("Efter 3 counts: " + counter.getValue());
+        counter.times2();
+        System.out.println("Efter times2: " + counter.getValue());
+        counter.zero();
+        System.out.println("Efter zero kald: " + counter.getValue());
+    }
+}
Index: Dag9SingletonOgAdapter/src/opgave2/Counter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave2/Counter.java b/Dag9SingletonOgAdapter/src/opgave2/Counter.java
new file mode 100644
--- /dev/null	(date 1646646518920)
+++ b/Dag9SingletonOgAdapter/src/opgave2/Counter.java	(date 1646646518920)
@@ -0,0 +1,34 @@
+package opgave2;
+
+public class Counter {
+    private static Counter counter;
+    private int value;
+
+    private Counter() {
+        this.value = 0;
+    }
+
+    public static Counter getInstance() {
+        if (counter == null) {
+            counter = new Counter();
+        }
+        return counter;
+    }
+
+    public void count() {
+        this.value += 1;
+    }
+
+    public void times2() {
+        value = value * 2;
+    }
+
+    public void zero(){
+        this.value = 0;
+    }
+
+    public int getValue(){
+        return value;
+    }
+
+}
Index: Dag8UnitTest/test/storage/StorageTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/test/storage/StorageTest.java b/Dag8UnitTest/test/storage/StorageTest.java
new file mode 100644
--- /dev/null	(date 1645360903168)
+++ b/Dag8UnitTest/test/storage/StorageTest.java	(date 1645360903168)
@@ -0,0 +1,80 @@
+package storage;
+
+import modelstudent.Student;
+import modelstudent.Team;
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class StorageTest {
+    Storage storage;
+    Team teama, teamb;
+    Student s1, s2;
+
+    @BeforeEach
+    void setUp() {
+        //arrange
+        storage = new Storage();
+        teama = new Team("A", "1");
+        teamb = new Team("B", "2");
+
+        storage.addTeam(teama);
+        storage.addTeam(teamb);
+        s1 = new Student("Hans", 22);
+        s2 = new Student("Ib", 20);
+        storage.addStudent(s1);
+        storage.addStudent(s2);
+    }
+    @Test
+    public void storage() {
+        //act
+        Storage s = new Storage();
+        //assert
+        assertNotNull(s);
+        assertEquals(0, s.getAllStudents().size());
+        assertEquals(0, s.getAllTeams().size());
+    }
+
+    @Test
+    void addTeam() {
+        //arrange
+        Team teamc = new Team("C", "3");
+        assertEquals(2, storage.getAllTeams().size());
+        assertFalse(storage.getAllTeams().contains(teamc));
+        //act
+        storage.addTeam(teamc);
+        //assert
+        assertEquals(3, storage.getAllTeams().size());
+        assertTrue(storage.getAllTeams().contains(teamc));
+    }
+
+    @Test
+    void getAllTeams() {
+        // act && assert
+        assertEquals(2, storage.getAllTeams().size());
+        assertTrue(storage.getAllTeams().contains(teama));
+        assertTrue(storage.getAllTeams().contains(teamb));
+    }
+
+    @Test
+    void addStudent() {
+        //arrange
+        Student s3 = new Student("Jane", 24);
+        assertEquals(2, storage.getAllStudents().size());
+        assertFalse(storage.getAllStudents().contains(s3));
+        //act
+        storage.addStudent(s3);
+        //assert
+        assertEquals(3, storage.getAllStudents().size());
+        assertTrue(storage.getAllStudents().contains(s3));
+    }
+
+    @Test
+    void getAllStudents() {
+        //act & assert
+        assertEquals(2, storage.getAllStudents().size());
+        assertTrue(storage.getAllStudents().contains(s1));
+        assertTrue(storage.getAllStudents().contains(s2));
+    }
+}
\ No newline at end of file
Index: Dag8UnitTest/Dag8UnitTest.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/Dag8UnitTest.iml b/Dag8UnitTest/Dag8UnitTest.iml
new file mode 100644
--- /dev/null	(date 1645520167602)
+++ b/Dag8UnitTest/Dag8UnitTest.iml	(date 1645520167602)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module-library" scope="TEST">
+      <library name="JUnit4">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+    <orderEntry type="module-library" scope="TEST">
+      <library name="JUnit5.7.0">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.7.0/junit-jupiter-5.7.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.7.0/junit-jupiter-api-5.7.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.7.0/junit-platform-commons-1.7.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.7.0/junit-jupiter-params-5.7.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.7.0/junit-jupiter-engine-5.7.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.7.0/junit-platform-engine-1.7.0.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+  </component>
+</module>
\ No newline at end of file
Index: Dag8UnitTest/src/caculator/Calculator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/caculator/Calculator.java b/Dag8UnitTest/src/caculator/Calculator.java
new file mode 100644
--- /dev/null	(date 1487666160000)
+++ b/Dag8UnitTest/src/caculator/Calculator.java	(date 1487666160000)
@@ -0,0 +1,46 @@
+package caculator;
+
+public class Calculator {
+    public int result;
+
+    public void add(int n) {
+        result = result + n;
+    }
+
+    public void subtract(int n) {
+        result = result - n;
+    }
+
+    public void multiply(int n) {
+        result = result * n;
+    }
+
+    public void divide(int n) {
+        result = result / n;
+    }
+
+    public void square(int n) {
+        result = n * n;
+    }
+
+    public void squareRoot() {
+        while (true) {
+        }
+    }
+
+    public void clear() {
+        result = 0;
+    }
+
+    public void turnOn() {
+        result = 0;
+    }
+
+    public void switchOff() {
+        result = -1;
+    }
+
+    public int getResult() {
+        return result;
+    }
+}
Index: Dag8UnitTest/test/CalculatorTest/CalculatorTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/test/CalculatorTest/CalculatorTest.java b/Dag8UnitTest/test/CalculatorTest/CalculatorTest.java
new file mode 100644
--- /dev/null	(date 1645522418401)
+++ b/Dag8UnitTest/test/CalculatorTest/CalculatorTest.java	(date 1645522418401)
@@ -0,0 +1,69 @@
+package CalculatorTest;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+import caculator.Calculator;
+import org.junit.jupiter.api.*;
+
+import java.time.Duration;
+import java.util.concurrent.TimeUnit;
+
+class CalculatorTest {
+
+    private Calculator calculator = new Calculator();
+
+    @BeforeEach
+    void setUp() {
+        calculator.clear();
+    }
+
+    @Test
+    void add() {
+        calculator.add(2);
+        calculator.add(6);
+        assertEquals(8, calculator.getResult());
+    }
+
+    @Test
+    void subtract() {
+        calculator.add(12);
+        calculator.subtract(4);
+        assertEquals(8, calculator.getResult());
+    }
+
+    @Test
+    void multiply() {
+        calculator.add(12);
+        calculator.multiply(3);
+        assertEquals(36, calculator.getResult());
+    }
+
+    @Test
+    void divide() {
+        calculator.add(12);
+        calculator.divide(4);
+        assertTrue(calculator.getResult() == 3);
+    }
+
+    @Test
+    void divideZero() {
+        calculator.add(12);
+        Exception exception = assertThrows(RuntimeException.class,() ->{
+            calculator.divide(0);
+        });
+    }
+
+    @Test
+    void square() {
+    }
+
+   @Disabled
+   @Test
+    void squareRoot() {
+        assertTimeoutPreemptively(Duration.ofMillis(1000), ()->calculator.squareRoot());
+    }
+
+    @Test
+    void clear() {
+    }
+}
\ No newline at end of file
Index: Dag9SingletonOgAdapter/src/opgave5/Subjekt.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave5/Subjekt.java b/Dag9SingletonOgAdapter/src/opgave5/Subjekt.java
new file mode 100644
--- /dev/null	(date 1646652966143)
+++ b/Dag9SingletonOgAdapter/src/opgave5/Subjekt.java	(date 1646652966143)
@@ -0,0 +1,9 @@
+package opgave5;
+
+
+public interface Subjekt {
+
+    public void registerObserver(Observer o);
+
+    public void removeObserver(Observer o);
+}
Index: Dag9SingletonOgAdapter/src/opgave4/ElVare.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave4/ElVare.java b/Dag9SingletonOgAdapter/src/opgave4/ElVare.java
new file mode 100644
--- /dev/null	(date 1646648469836)
+++ b/Dag9SingletonOgAdapter/src/opgave4/ElVare.java	(date 1646648469836)
@@ -0,0 +1,17 @@
+package opgave4;
+
+public class ElVare extends Vare{
+
+    public ElVare(int pris, String navn) {
+        super(pris, navn);
+    }
+
+    @Override
+    public double beregnMoms() {
+        double moms;
+        moms = getPris() * 0.3;
+        if (moms < 3)
+            moms = 3;
+        return moms;
+    }
+}
Index: Dag9SingletonOgAdapter/src/opgave4/FoedeVare.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave4/FoedeVare.java b/Dag9SingletonOgAdapter/src/opgave4/FoedeVare.java
new file mode 100644
--- /dev/null	(date 1646650719413)
+++ b/Dag9SingletonOgAdapter/src/opgave4/FoedeVare.java	(date 1646650719413)
@@ -0,0 +1,13 @@
+package opgave4;
+
+public class FoedeVare extends Vare {
+
+    public FoedeVare(int pris, String navn) {
+        super(pris, navn);
+    }
+
+    @Override
+    public double beregnMoms() {
+        return getPris() * 0.05;
+    }
+}
Index: Dag9SingletonOgAdapter/src/opgave5/Observer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave5/Observer.java b/Dag9SingletonOgAdapter/src/opgave5/Observer.java
new file mode 100644
--- /dev/null	(date 1646652375934)
+++ b/Dag9SingletonOgAdapter/src/opgave5/Observer.java	(date 1646652375934)
@@ -0,0 +1,6 @@
+package opgave5;
+
+public interface Observer {
+
+    public void update(String s, int antal);
+}
Index: Dag8UnitTest/src/opgave5/bagMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/opgave5/bagMap.java b/Dag8UnitTest/src/opgave5/bagMap.java
new file mode 100644
--- /dev/null	(date 1646651247469)
+++ b/Dag8UnitTest/src/opgave5/bagMap.java	(date 1646651247469)
@@ -0,0 +1,42 @@
+package opgave5;
+
+import java.util.HashMap;
+import java.util.Iterator;
+
+public class bagMap implements Bag, Iterable {
+    HashMap<String, Integer> contents = new HashMap<>();
+
+    @Override
+    public void add(String s) {
+        if (!contents.containsKey(s)) {
+            contents.put(s, 1);
+        } else {
+            contents.put(s, contents.get(s) + 1);
+        }
+    }
+
+    @Override
+    public void remove(String s) {
+        if (contents.get(s) == 1){
+            contents.remove(s);
+        } else {
+            contents.put(s, contents.get(s) - 1);
+        }
+    }
+
+    @Override
+    public int getCount(String s) {
+        return contents.get(s);
+    }
+
+    /**
+     * Returns an iterator over elements of type {@code T}.
+     *
+     * @return an Iterator.
+     */
+    @Override
+    public Iterator<String> iterator() {
+        return contents.keySet().iterator();
+    }
+
+}
Index: Dag9SingletonOgAdapter/src/opgave4/Vare.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag9SingletonOgAdapter/src/opgave4/Vare.java b/Dag9SingletonOgAdapter/src/opgave4/Vare.java
new file mode 100644
--- /dev/null	(date 1646648086227)
+++ b/Dag9SingletonOgAdapter/src/opgave4/Vare.java	(date 1646648086227)
@@ -0,0 +1,29 @@
+package opgave4;
+
+public abstract class Vare {
+    private int pris;
+    private String navn;
+
+    public Vare(int pris, String navn){
+        this.pris = pris;
+        this.navn = navn;
+    }
+
+    public int getPris() {
+        return pris;
+    }
+
+    public void setPris(int pris) {
+        this.pris = pris;
+    }
+
+    public String getNavn() {
+        return navn;
+    }
+
+    public void setNavn(String navn) {
+        this.navn = navn;
+    }
+
+    public abstract double beregnMoms();
+}
Index: Dag8UnitTest/src/opgave5/Bag.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dag8UnitTest/src/opgave5/Bag.java b/Dag8UnitTest/src/opgave5/Bag.java
new file mode 100644
--- /dev/null	(date 1646643297269)
+++ b/Dag8UnitTest/src/opgave5/Bag.java	(date 1646643297269)
@@ -0,0 +1,12 @@
+package opgave5;
+
+
+public interface Bag {
+
+    public void add(String s);
+
+    public void remove(String s);
+
+    public int getCount(String s);
+
+}
